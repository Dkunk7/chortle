*, *::after, *::before {
    box-sizing: border-box;
    font-family: Arial;
}

/* 
    Unit Notes:
        em: relative to the font-size of the element (2em means 2x the size of the current font)
        rem: relative to the font-size of the root element
        vw/vh: relative to 1% of the width/height of the viewport(browser) --> 1vw is 1% of the view width
        vmin/vmax: relative to 1% of the viewport's smaller/larger dimension(respectively)
*/

body {
    background-color: /* Actual Wordle color --> */ hsl(240, 3%, 7%);
    display: flex;
    flex-direction: column; /* The Wordle site has three sections in a column: the header, grid, and keyboard */
    min-height: 100vh;
    margin: 0;
    padding: 1em;
    font-size: clamp(.5rem, 2.5vmin, 1.5rem); /* (min, default, max) */
}

.keyboard {
    display: grid;
    grid-template-columns: repeat(20, minmax(auto, 1.25em)); /* Keyboard is 10 keys wide, but use 20 so that each key takes 2 spaces, and the gaps in the middle row can be 1 space */
    grid-auto-rows: 3em; /* Rows are 3em tall */
    gap: .25em; /* Gap between keys */
    justify-content: center;
}

.key {
    font-size: inherit; /* Buttons have a default size -- this removes that and allows the font-size in body ^^ to work */
    grid-column: span 2; /* Keys take 2 spaces as specified in grid-template-columns in keyboard above ^^ */
    border: none;
    padding: 0;
    display: flex; /* Changing the display from what it is in keyboard(the parent) means you need to rejustify/align, as shown below vv */
    justify-content: center;
    align-items: center;
    background-color: /* Actual Wordle color --> hsl(200, 1%, 51%) */ hsl(
        var(--hue, 200), /* Second value is the default */
        var(--saturation, 1%),
        calc(var(--lightness-offset, 0%) + var(--lightness, 51%)) /* offset is 0 by default; allows offset to be changed to dynamically change the lightness of a key */
    );
    color: white;
    fill: white; /* This is for the svg on the delete key */
    text-transform: uppercase;
    border-radius: .25em;
    cursor: pointer;
    user-select: none; /* Disables selecting of the text */
}

.key.large {
    grid-column: span 3; /* Makes enter and delete keys take 3 spaces */
}

.key > svg { /* This selects the svg within objects with the class of key (note that there is only one svg in this case) */
    width: 1.75em; /* Make the delete svg slightly larger */
    height: 1.75em;
}

.key:hover, .key:focus {
    --lightness-offset: 10%; /* Make key 10% lighter when hovered or focused */
}

.key.wrong { /* Define wrong, wrong-pos, and correct in that order --> correct key should override wrong-pos key, etc */
    --lightness: 23%;
}

.key.wrong-position {
    --hue: 49;
    --saturation: 51%;
    --lightness: 47%;
}

.key.correct {
    --hue: 115;
    --saturation: 29%;
    --lightness: 43%;
}

.guess-grid {
    display: grid;
    justify-content: center;
    align-content: center;
    flex-grow: 1; /* This will make the grid take up the whole page? and push the keyboard to the bottom */
    grid-template-columns: repeat(5, 4em);
    grid-template-rows: repeat(6, 4em);
    gap: .25em;
    margin-bottom: 1em;
}

.tile {
    font-size: 2em;
    color: white;
    border: .05em solid hsl(240, 2%, 23%);
    text-transform: uppercase;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
    transition: transform 250ms; /* Flip time is 500ms in game.js because this animation is occuring twice per tile (flip up and back down) */
}

/* Maybe customize most/all of the tile colors n stuff */

.tile[data-state="active"] { /* Tile in use but not yet submitted */ /* NOTE: Maybe make this color a little more noticeable later */
    border-color: hsl(200, 1%, 34%);
}

.tile[data-state="wrong"] {
    border: none;
    background-color: hsl(240, 2%, 23%);
}

.tile[data-state="wrong-position"] {
    border: none;
    background-color: hsl(49, 51%, 47%);
}

.tile[data-state="correct"] {
    border: none;
    background-color: hsl(115, 29%, 43%);
}

.tile.shake {
    animation: shake 250ms ease-in-out
}

.tile.dance {
    animation: dance 500ms ease-in-out
}

.tile.flip {
    transform: rotateX(90deg); /* Rotate 90deg over the x-axis. This makes a 2D square become flat and essentially invisible */
}

@keyframes shake {
    10% {
        transform: translateX(-5%);
    }

    30% {
        transform: translateX(5%);
    }

    50% {
        transform: translateX(-7.5%);
    }

    70% {
        transform: translateX(7.5%);
    }

    90% {
        transform: translateX(-5%);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes dance {
    20% {
        transform: translateY(-50%);
    }
    40% {
        transform: translateY(5%);
    }
    60% {
        transform: translateY(-25%);
    }
    80% {
        transform: translateY(2.5%);
    }
    90% {
        transform: translateY(-5%);
    }
    100% {
        transform: translateY(0);
    }
}

.alert-container {
    position: fixed;
    top: 10vh;
    left: 50vw;
    transform: translateX(-50%);
    z-index: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.alert {
    pointer-events: none; /* Alert cannot be selected */
    background-color: hsl(204, 7%, 85%);
    padding: .75em;
    border-radius: .25em;
    opacity: 1;
    transition: opacity 500ms ease-in-out;
    margin-bottom: .5em;
}

.alert:last-child {
    margin-bottom: 0;
}

.alert.hide {
    opacity: 0;
}